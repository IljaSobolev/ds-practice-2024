# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import order_queue_pb2 as order__queue__pb2


class OrderQueueStub(object):
    """Order queue service definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.EnqueueOrder = channel.unary_unary(
                '/orderqueue.OrderQueue/EnqueueOrder',
                request_serializer=order__queue__pb2.EnqueueOrderRequest.SerializeToString,
                response_deserializer=order__queue__pb2.EnqueueOrderResponse.FromString,
                )


class OrderQueueServicer(object):
    """Order queue service definition
    """

    def EnqueueOrder(self, request, context):
        """Enqueue an order with a specified priority
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrderQueueServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'EnqueueOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.EnqueueOrder,
                    request_deserializer=order__queue__pb2.EnqueueOrderRequest.FromString,
                    response_serializer=order__queue__pb2.EnqueueOrderResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'orderqueue.OrderQueue', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OrderQueue(object):
    """Order queue service definition
    """

    @staticmethod
    def EnqueueOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/orderqueue.OrderQueue/EnqueueOrder',
            order__queue__pb2.EnqueueOrderRequest.SerializeToString,
            order__queue__pb2.EnqueueOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
